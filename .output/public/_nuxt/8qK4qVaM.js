import{h as a}from"./DNNrIrhy.js";function p(o){const r=o;if(!o)return;const t=a.timeline(),e=a.timeline(),i=r.querySelector("#tetris"),s=r.querySelectorAll("#bridges span, #design span");return e.timeScale(2),i&&(e.to(i,{autoAlpha:.6,filter:"none",duration:.6,ease:"power1.out"}),e.fromTo("#tetris-line path",{autoAlpha:0,y:-1e3},{autoAlpha:1,y:-700,duration:"1.5",ease:"back.inOut(0.7)"}),e.fromTo("#tetris-line path",{x:-80},{x:0,duration:"0.4",ease:"power1.out"}),e.fromTo("#tetris-line path",{y:-700},{y:0,duration:"3",ease:"back.inOut(0.7)"}),e.fromTo("#tetris-stack",{autoAlpha:0,y:"-200px",transformOrigin:"50% 50%"},{autoAlpha:1,y:"0",duration:"1.5",ease:"back.inOut(0.7)"}),e.fromTo("#tetris-stack g",{rotation:180,transformOrigin:"50% 50%"},{rotation:0,duration:"0.4",ease:"power1.out"}),e.fromTo("#tetris-stack",{y:"0dvh",transformOrigin:"50% 50%"},{y:"600px",duration:"1.5",ease:"back.inOut(0.7)"}),e.fromTo("#tetris-l path",{autoAlpha:0,y:-1e3},{autoAlpha:1,y:-700,duration:"1.5",ease:"back.inOut(0.7)"}),e.fromTo("#tetris-l path",{x:-320},{x:0,duration:"0.8",ease:"power1.out"}),e.fromTo("#tetris-l path",{y:-700},{y:0,duration:"2.5",ease:"back.inOut(0.7)"}),e.fromTo("#tetris path",{y:0,x:0,autoAlpha:1,filter:"none"},{x:()=>a.utils.random(-1e3,500),y:()=>a.utils.random(-1e3,500),autoAlpha:0,filter:"blur(40px)",duration:"2",ease:"back.inOut(0.7)"},"+=0.2")),t.set("#tetris-stack",{y:"-200px"}),t.set("#tetris-line path",{y:-1e3,x:-80,autoAlpha:0}),t.set("#tetris-l path",{y:-1e3,x:-320,autoAlpha:0}),t.set("#tetris-stack g",{rotation:180,transformOrigin:"50% 50%"}),t.set(".intro h1.headline",{y:0,transformOrigin:"center center"}),t.addLabel("Enter"),s.forEach((n,u)=>{t.fromTo(n,{y:-50,autoAlpha:0,scale:.4},{y:0,autoAlpha:1,scale:1,duration:.8,ease:"elastic.out(0.9)"},`Enter+=${u*.25}`)}),t.to(["#bridges","#design"],{y:"0",duration:.8,ease:"elastic.out(0.9)",stagger:.15},"Enter+=2"),t.fromTo("#works span",{y:-50,autoAlpha:0,scale:.4},{y:0,autoAlpha:1,scale:1,duration:1.5,stagger:.4,ease:"elastic.out(0.9)"},"Enter+2.5"),t.addLabel("introFinishing","+=4"),t.to(["#bridges","#works"],{x:40,repeat:2,yoyo:!0,duration:.8},"introFinishing").to(["#bridges","#works"],{x:-1e3,autoAlpha:0,filter:"blur(40px)",duration:1.5,ease:"elastic.out(1)"},"introFinishing+=1"),t.to("#design",{x:-40,repeat:2,yoyo:!0,duration:.8},"introFinishing").to("#design",{x:1e3,autoAlpha:0,filter:"blur(40px)",duration:1.5,ease:"elastic.out(1)"},"introFinishing+=1"),t}export{p as buildTetrisTL};
